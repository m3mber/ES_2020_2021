[{"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/index.tsx":"1","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/reportWebVitals.ts":"2","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/App.tsx":"3","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/Map/Map.tsx":"4","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/Table/HistoricalTable.tsx":"5","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/DataGrid/DataGridExtended.tsx":"6","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/Modal/BusTrackingModal.tsx":"7"},{"size":496,"mtime":1622397994636,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1620672810209,"results":"10","hashOfConfig":"9"},{"size":1745,"mtime":1622399169874,"results":"11","hashOfConfig":"9"},{"size":2650,"mtime":1622399205996,"results":"12","hashOfConfig":"9"},{"size":1599,"mtime":1621197407846,"results":"13","hashOfConfig":"9"},{"size":1880,"mtime":1621197156966,"results":"14","hashOfConfig":"9"},{"size":2606,"mtime":1622394091547,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1tdrdwm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/index.tsx",[],["33","34"],"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/reportWebVitals.ts",[],"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/App.tsx",["35","36"],"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/Map/Map.tsx",["37"],"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/Table/HistoricalTable.tsx",["38","39"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DataGridExtended } from 'DataGrid/DataGridExtended';\nimport { GridColumns, GridRowsProp } from '@material-ui/data-grid';\n\nexport interface IHistoricalTableProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  rootDiv: {\n    flexDirection: 'column',\n    display: 'flex',\n    height: '400px',\n  },\n  textField: {\n    textAlign: 'left',\n    width: 'auto',\n    margin: 15,\n    height: 40,\n  },\n  tableStyle: {\n    display: 'flex',\n    height: '500px',\n\n    width: '100%',\n  },\n}));\n\nconst HistoricalTable: React.FC<IHistoricalTableProps> = ({}) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState<GridRowsProp>([]);\n\n  const columns: GridColumns = [\n    {\n      field: 'id',\n      headerName: 'Id',\n      headerAlign: 'center',\n      align: 'center',\n      flex: 1.5,\n    },\n    {\n      field: 'code',\n      headerName: 'Code',\n      headerAlign: 'center',\n      align: 'center',\n      flex: 1.5,\n    },\n    {\n      field: 'name',\n      headerName: 'Name',\n      headerAlign: 'center',\n      align: 'center',\n      flex: 2,\n    },\n  ];\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = () => {\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className={classes.rootDiv}>\n      <DataGridExtended\n        tableHeader={'Historical data'}\n        containerClassName={classes.tableStyle}\n        rows={rows}\n        columns={columns}\n        pageSize={25}\n      />\n    </div>\n  );\n};\n\nexport { HistoricalTable };\n","/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/DataGrid/DataGridExtended.tsx",[],"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/Modal/BusTrackingModal.tsx",["40","41","42","43"],"import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Modal,\n  CircularProgress,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SockJsClient from 'react-stomp';\n\nexport interface IBusTrackingModalProps {\n  isOpen: boolean;\n  closeModal: Function;\n}\n\nexport interface IMessageData {\n  id: number;\n  node_id: number;\n  location_id: number;\n  head: string;\n  lon: number;\n  lat: number;\n  speed: number;\n  ts: string;\n  write_time: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modalStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  modalDiv: {\n    overflow: 'auto',\n    backgroundColor: 'white',\n    width: '30%',\n    height: '30%',\n    borderRadius: '10px',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'center',\n    padding: 5,\n  },\n  exitButton: {\n    position: 'absolute',\n    right: '33%',\n    top: '33%',\n    backgroundColor: 'white',\n    '&:hover': {\n      background: 'white',\n      transform: 'scale(1.15)',\n    },\n  },\n  loadingLanguages: {\n    position: 'absolute',\n    width: '30%',\n    height: '30%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '10px',\n  },\n}));\n\nconst SOCKET_URL = 'http://localhost:8081/real-time/location';\n\nconst BusTrackingModal: React.FC<IBusTrackingModalProps> = ({\n  isOpen,\n  closeModal,\n}) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [messages, setMessages] = useState<IMessageData[]>([]);\n\n  let onConnected = () => {\n    console.log('Connected!!');\n  };\n  let onMessageReceived = (msg: IMessageData) => {\n    console.log('New Message Received!!', msg);\n    setMessages(messages.concat(msg));\n  };\n\n  return (\n    <Modal\n      disableBackdropClick={true}\n      className={classes.modalStyle}\n      open={isOpen}\n    >\n      <div className={classes.modalDiv}>\n        <SockJsClient\n          url={SOCKET_URL}\n          topics={['/ESP13_bus_data']}\n          onConnect={onConnected}\n          onDisconnect={console.log('Disconnected!')}\n          onMessage={(msg: any) => onMessageReceived(msg)}\n          debug={false}\n        />\n        <Typography>{messages[0].location_id}</Typography>\n        <IconButton\n          className={classes.exitButton}\n          onClick={() => {\n            closeModal();\n          }}\n        >\n          <HighlightOffIcon fontSize='large' color='secondary' />\n        </IconButton>\n      </div>\n    </Modal>\n  );\n};\n\nexport { BusTrackingModal };\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"52","line":14,"column":7,"nodeType":"50","messageId":"51","endLine":14,"endColumn":12},{"ruleId":"48","severity":1,"message":"53","line":10,"column":9,"nodeType":"50","messageId":"51","endLine":10,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":28,"column":59,"nodeType":"56","messageId":"57","endLine":28,"endColumn":61},{"ruleId":"48","severity":1,"message":"58","line":30,"column":16,"nodeType":"50","messageId":"51","endLine":30,"endColumn":23},{"ruleId":"48","severity":1,"message":"49","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"59","line":5,"column":3,"nodeType":"50","messageId":"51","endLine":5,"endColumn":19},{"ruleId":"48","severity":1,"message":"60","line":74,"column":10,"nodeType":"50","messageId":"51","endLine":74,"endColumn":17},{"ruleId":"48","severity":1,"message":"61","line":74,"column":19,"nodeType":"50","messageId":"51","endLine":74,"endColumn":29},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'busId' is assigned a value but never used.","'InfoBox' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setRows' is assigned a value but never used.","'CircularProgress' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
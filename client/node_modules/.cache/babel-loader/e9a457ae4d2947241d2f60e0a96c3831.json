{"ast":null,"code":"var _jsxFileName = \"/Users/vv/Projects/bitbustracker/client/src/Map/Map.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  compose,\n  withProps,\n  withStateHandlers\n} = require('recompose');\n\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} = require('react-google-maps');\n\nconst {\n  InfoBox\n} = require('react-google-maps/lib/components/addons/InfoBox');\n\nconst Map = compose(withProps({\n  googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyC5S9ELt2PdwzlZMRWCGQNh7ZKj8j-7qzY&v=3.exp&libraries=geometry,drawing,places',\n  loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this),\n  containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `400px`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this),\n  mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this),\n  center: {\n    lat: 41.14961,\n    lng: -8.61099\n  }\n}), withStateHandlers(() => ({\n  isOpen: false\n}), {\n  onToggleOpen: isOpen => () => ({\n    isOpen: !isOpen\n  })\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 13,\n  defaultCenter: props.center // defaultOptions={{ styles: demoFancyMapStyles }}\n  ,\n  children: /*#__PURE__*/_jsxDEV(InfoBox, {\n    defaultPosition: new google.maps.LatLng(props.center.lat, props.center.lng),\n    options: {\n      closeBoxURL: ``,\n      enableEventPropagation: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this));\nexport { Map };","map":{"version":3,"sources":["/Users/vv/Projects/bitbustracker/client/src/Map/Map.tsx"],"names":["React","compose","withProps","withStateHandlers","require","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoBox","Map","googleMapURL","loadingElement","height","containerElement","mapElement","center","lat","lng","isOpen","onToggleOpen","props","google","maps","LatLng","closeBoxURL","enableEventPropagation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,IAA4CC,OAAO,CAAC,WAAD,CAAzD;;AACA,MAAM;AACJC,EAAAA,YADI;AAEJC,EAAAA,aAFI;AAGJC,EAAAA,SAHI;AAIJC,EAAAA;AAJI,IAKFJ,OAAO,CAAC,mBAAD,CALX;;AAMA,MAAM;AAAEK,EAAAA;AAAF,IAAcL,OAAO,CAAC,iDAAD,CAA3B;;AAEA,MAAMM,GAAG,GAAGT,OAAO,CACjBC,SAAS,CAAC;AACRS,EAAAA,YAAY,EACV,+HAFM;AAGRC,EAAAA,cAAc,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,UAHR;AAIRC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,UAJV;AAKRE,EAAAA,UAAU,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,UALJ;AAMRG,EAAAA,MAAM,EAAE;AAAEC,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAC;AAAvB;AANA,CAAD,CADQ,EASjBf,iBAAiB,CACf,OAAO;AACLgB,EAAAA,MAAM,EAAE;AADH,CAAP,CADe,EAIf;AACEC,EAAAA,YAAY,EAAGD,MAAD,IAAiB,OAAO;AACpCA,IAAAA,MAAM,EAAE,CAACA;AAD2B,GAAP;AADjC,CAJe,CATA,EAmBjBd,YAnBiB,EAoBjBC,aApBiB,CAAP,CAsBTe,KAAD,iBAKE,QAAC,SAAD;AACE,EAAA,WAAW,EAAE,EADf;AAEE,EAAA,aAAa,EAAEA,KAAK,CAACL,MAFvB,CAGE;AAHF;AAAA,yBAKE,QAAC,OAAD;AACE,IAAA,eAAe,EACb,IAAIM,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBH,KAAK,CAACL,MAAN,CAAaC,GAApC,EAAyCI,KAAK,CAACL,MAAN,CAAaE,GAAtD,CAFJ;AAIE,IAAA,OAAO,EAAE;AAAEO,MAAAA,WAAW,EAAG,EAAhB;AAAmBC,MAAAA,sBAAsB,EAAE;AAA3C;AAJX;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,QA3BQ,CAAZ;AA+DA,SAAShB,GAAT","sourcesContent":["import React from 'react';\nconst { compose, withProps, withStateHandlers } = require('recompose');\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} = require('react-google-maps');\nconst { InfoBox } = require('react-google-maps/lib/components/addons/InfoBox');\n\nconst Map = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyC5S9ELt2PdwzlZMRWCGQNh7ZKj8j-7qzY&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 41.14961, lng: -8.61099 },\n  }),\n  withStateHandlers(\n    () => ({\n      isOpen: false,\n    }),\n    {\n      onToggleOpen: (isOpen: any) => () => ({\n        isOpen: !isOpen,\n      }),\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)(\n  (props: {\n    center: { lat: number; lng: number };\n    onToggleOpen: any;\n    isOpen: any;\n  }) => (\n    <GoogleMap\n      defaultZoom={13}\n      defaultCenter={props.center}\n      // defaultOptions={{ styles: demoFancyMapStyles }}\n    >\n      <InfoBox\n        defaultPosition={\n          new google.maps.LatLng(props.center.lat, props.center.lng)\n        }\n        options={{ closeBoxURL: ``, enableEventPropagation: true }}\n      ></InfoBox>\n      {/* <Marker\n        position={{ lat: 22.6273, lng: 120.3014 }}\n        onClick={props.onToggleOpen}\n      >\n        {props.isOpen && (\n          <InfoBox\n            onCloseClick={props.onToggleOpen}\n            options={{ closeBoxURL: ``, enableEventPropagation: true }}\n          >\n            <div\n              style={{\n                backgroundColor: `yellow`,\n                opacity: 0.75,\n                padding: `12px`,\n              }}\n            >\n              <div style={{ fontSize: `16px` }}>Hello, Kaohsiung!</div>\n            </div>\n          </InfoBox>\n        )}\n      </Marker> */}\n    </GoogleMap>\n  )\n);\n\nexport { Map };\n"]},"metadata":{},"sourceType":"module"}
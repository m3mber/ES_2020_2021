{"ast":null,"code":"var _jsxFileName = \"/Users/vv/Projects/bitbustracker/client/src/Map/Map.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Marker, GoogleMap, DirectionsRenderer } from 'react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = ({}) => {\n  _s();\n\n  const directionsService = new google.maps.DirectionsService();\n  const [directions, setDirections] = useState();\n  const [origin, setOrigin] = useState();\n  const [destination, setDestination] = useState();\n  directionsService.route({\n    origin: origin,\n    destination: destination,\n    travelMode: google.maps.TravelMode.DRIVING\n  }, (result, status) => {\n    if (status === google.maps.DirectionsStatus.OK) {\n      setDirections(result);\n    } else {\n      console.error(`error fetching directions ${result}`);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"googleMap\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 9,\n      defaultCenter: {\n        lat: 41.75,\n        lng: 1.8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: origin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"aAJNkfV518kwVNaEYuWtdi4EKh0=\");\n\n_c = Map;\nexport { Map };\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/vv/Projects/bitbustracker/client/src/Map/Map.tsx"],"names":["React","useState","Marker","GoogleMap","DirectionsRenderer","Map","directionsService","google","maps","DirectionsService","directions","setDirections","origin","setOrigin","destination","setDestination","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","console","error","lat","lng"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,kBAA5B,QAAsD,mBAAtD;;;AAIA,MAAMC,GAAwB,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACvC,QAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AAEAK,EAAAA,iBAAiB,CAACU,KAAlB,CACE;AACEJ,IAAAA,MAAM,EAAEA,MADV;AAEEE,IAAAA,WAAW,EAAEA,WAFf;AAGEG,IAAAA,UAAU,EAAEV,MAAM,CAACC,IAAP,CAAYU,UAAZ,CAAuBC;AAHrC,GADF,EAME,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClB,QAAIA,MAAM,KAAKd,MAAM,CAACC,IAAP,CAAYc,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9CZ,MAAAA,aAAa,CAACS,MAAD,CAAb;AACD,KAFD,MAEO;AACLI,MAAAA,OAAO,CAACC,KAAR,CAAe,6BAA4BL,MAAO,EAAlD;AACD;AACF,GAZH;AAeA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,CAAxB;AAA2B,MAAA,aAAa,EAAE;AAAEM,QAAAA,GAAG,EAAE,KAAP;AAAcC,QAAAA,GAAG,EAAE;AAAnB,OAA1C;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEf;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGJ,UAAU,iBAAI,QAAC,kBAAD;AAAoB,QAAA,UAAU,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAML,G;;KAAAA,G;AAgCN,SAASA,GAAT","sourcesContent":["import React, { useState } from 'react';\nimport { Marker, GoogleMap, DirectionsRenderer } from 'react-google-maps';\n\nexport interface IMapProps {}\n\nconst Map: React.FC<IMapProps> = ({}) => {\n  const directionsService = new google.maps.DirectionsService();\n  const [directions, setDirections] = useState<any>();\n  const [origin, setOrigin] = useState<any>();\n  const [destination, setDestination] = useState<any>();\n\n  directionsService.route(\n    {\n      origin: origin,\n      destination: destination,\n      travelMode: google.maps.TravelMode.DRIVING,\n    },\n    (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    }\n  );\n\n  return (\n    <section className='googleMap'>\n      <GoogleMap defaultZoom={9} defaultCenter={{ lat: 41.75, lng: 1.8 }}>\n        <Marker position={origin} />\n        <Marker position={destination} />\n        {directions && <DirectionsRenderer directions={directions} />}\n      </GoogleMap>\n    </section>\n  );\n};\n\nexport { Map };\n"]},"metadata":{},"sourceType":"module"}
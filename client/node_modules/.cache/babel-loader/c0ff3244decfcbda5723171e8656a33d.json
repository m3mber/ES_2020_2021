{"ast":null,"code":"var _jsxFileName = \"/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/DataGrid/DataGridExtended.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  selectedItemsCountContainer: {\n    widht: '100%',\n    height: '50px',\n    marginTop: '10px',\n    justifyContent: 'center',\n    backgroundColor: '#FEF5D9'\n  },\n  defaultTableContainer: {\n    height: '600px',\n    width: '100%',\n    display: 'flex',\n    marginBottom: '30px',\n    flexDirection: 'column'\n  }\n}));\n\nconst DataGridExtended = ({\n  containerClassName,\n  tableHeader,\n  ...rest\n}) => {\n  _s();\n\n  const [rows, setRows] = useState(rest.rows);\n  const classes = useStyles();\n  useEffect(() => {\n    setRows(rest.rows);\n  }, [rest.rows]);\n  let columns = [...rest.columns];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        justifyContent: 'center',\n        marginTop: '20px',\n        marginBottom: '10px',\n        width: '100%',\n        textAlign: 'center'\n      },\n      children: tableHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerClassName ? containerClassName : classes.defaultTableContainer,\n      children: /*#__PURE__*/_jsxDEV(DataGrid, { ...rest,\n        rows: rows,\n        columns: columns,\n        pageSize: 25,\n        rowsPerPageOptions: [25, 50, 100],\n        pagination: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataGridExtended, \"LlN5ouyQiqUL2xLhKilkXPn0YIc=\", false, function () {\n  return [useStyles];\n});\n\n_c = DataGridExtended;\nexport { DataGridExtended };\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridExtended\");","map":{"version":3,"sources":["/Users/vv/Projects/bitbustracker/ES_2020_2021/client/src/DataGrid/DataGridExtended.tsx"],"names":["React","useEffect","useState","DataGrid","makeStyles","Typography","useStyles","selectedItemsCountContainer","widht","height","marginTop","justifyContent","backgroundColor","defaultTableContainer","width","display","marginBottom","flexDirection","DataGridExtended","containerClassName","tableHeader","rest","rows","setRows","classes","columns","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAwBC,QAAxB,QAAsD,wBAAtD;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC,OAAO;AAClCG,EAAAA,2BAA2B,EAAE;AAC3BC,IAAAA,KAAK,EAAE,MADoB;AAE3BC,IAAAA,MAAM,EAAE,MAFmB;AAG3BC,IAAAA,SAAS,EAAE,MAHgB;AAI3BC,IAAAA,cAAc,EAAE,QAJW;AAK3BC,IAAAA,eAAe,EAAE;AALU,GADK;AAQlCC,EAAAA,qBAAqB,EAAE;AACrBJ,IAAAA,MAAM,EAAE,OADa;AAErBK,IAAAA,KAAK,EAAE,MAFc;AAGrBC,IAAAA,OAAO,EAAE,MAHY;AAIrBC,IAAAA,YAAY,EAAE,MAJO;AAKrBC,IAAAA,aAAa,EAAE;AALM;AARW,CAAP,CAAD,CAA5B;;AA0BA,MAAMC,gBAAkD,GAAG,CAAC;AAC1DC,EAAAA,kBAD0D;AAE1DC,EAAAA,WAF0D;AAG1D,KAAGC;AAHuD,CAAD,KAIrD;AAAA;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAC9BmB,IAAI,CAACC,IADyB,CAAhC;AAIA,QAAME,OAAO,GAAGlB,SAAS,EAAzB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACF,IAAI,CAACC,IAAN,CAAP;AACD,GAFQ,EAEN,CAACD,IAAI,CAACC,IAAN,CAFM,CAAT;AAIA,MAAIG,OAAO,GAAG,CAAC,GAAGJ,IAAI,CAACI,OAAT,CAAd;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEhB,MAAAA,MAAM,EAAE,MAAV;AAAkBK,MAAAA,KAAK,EAAE;AAAzB,KAAZ;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAE;AACLH,QAAAA,cAAc,EAAE,QADX;AAELD,QAAAA,SAAS,EAAE,MAFN;AAGLM,QAAAA,YAAY,EAAE,MAHT;AAILF,QAAAA,KAAK,EAAE,MAJF;AAKLY,QAAAA,SAAS,EAAE;AALN,OAFT;AAAA,gBAUGN;AAVH;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AACE,MAAA,SAAS,EACPD,kBAAkB,GACdA,kBADc,GAEdK,OAAO,CAACX,qBAJhB;AAAA,6BAOE,QAAC,QAAD,OACMQ,IADN;AAEE,QAAA,IAAI,EAAEC,IAFR;AAGE,QAAA,OAAO,EAAEG,OAHX;AAIE,QAAA,QAAQ,EAAE,EAJZ;AAKE,QAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CALtB;AAME,QAAA,UAAU;AANZ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAlDD;;GAAMP,gB;UASYZ,S;;;KATZY,gB;AAoDN,SAASA,gBAAT","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DataGridProps, DataGrid, GridRowModel } from '@material-ui/data-grid';\nimport { makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  selectedItemsCountContainer: {\n    widht: '100%',\n    height: '50px',\n    marginTop: '10px',\n    justifyContent: 'center',\n    backgroundColor: '#FEF5D9',\n  },\n  defaultTableContainer: {\n    height: '600px',\n    width: '100%',\n    display: 'flex',\n    marginBottom: '30px',\n    flexDirection: 'column',\n  },\n}));\n\nexport interface IGridRowModelExtended extends GridRowModel {\n  isSelected: boolean;\n}\n\nexport interface IDataGridExtendedProps extends DataGridProps {\n  containerClassName?: string;\n  tableHeader: string;\n}\n\nconst DataGridExtended: React.FC<IDataGridExtendedProps> = ({\n  containerClassName,\n  tableHeader,\n  ...rest\n}) => {\n  const [rows, setRows] = useState<IGridRowModelExtended[]>(\n    rest.rows as IGridRowModelExtended[]\n  );\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setRows(rest.rows as IGridRowModelExtended[]);\n  }, [rest.rows]);\n\n  let columns = [...rest.columns];\n\n  return (\n    <div style={{ height: '100%', width: '100%' }}>\n      <Typography\n        variant='h6'\n        style={{\n          justifyContent: 'center',\n          marginTop: '20px',\n          marginBottom: '10px',\n          width: '100%',\n          textAlign: 'center',\n        }}\n      >\n        {tableHeader}\n      </Typography>\n\n      <div\n        className={\n          containerClassName\n            ? containerClassName\n            : classes.defaultTableContainer\n        }\n      >\n        <DataGrid\n          {...rest}\n          rows={rows}\n          columns={columns}\n          pageSize={25}\n          rowsPerPageOptions={[25, 50, 100]}\n          pagination\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { DataGridExtended };\n"]},"metadata":{},"sourceType":"module"}